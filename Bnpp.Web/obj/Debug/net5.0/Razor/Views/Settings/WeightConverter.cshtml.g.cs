#pragma checksum "C:\Users\mohsen\source\repos\Bnpp\Bnpp.Web\Views\Settings\WeightConverter.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "0d38244962f1c87c6c07bc87e0690bfd98f05dcb23df00cfa744049d58bb7a00"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Settings_WeightConverter), @"mvc.1.0.view", @"/Views/Settings/WeightConverter.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"0d38244962f1c87c6c07bc87e0690bfd98f05dcb23df00cfa744049d58bb7a00", @"/Views/Settings/WeightConverter.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"f68c967ecac2dee79a0753fe99077890945878b3e87c560bd67de47177eeb66f", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Settings_WeightConverter : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\mohsen\source\repos\Bnpp\Bnpp.Web\Views\Settings\WeightConverter.cshtml"
  
	ViewData["Title"] = "WeightConverter";
	Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""dcontent"">
	<div style=""margin-top: 10px; background-color: #6b8d9e; padding-top: 5px; padding-bottom: 5px; padding-right: 10px; border-radius: 5px; border: solid 1px #cccccc; background: repeating-linear-gradient(-45deg, #7fa1b3, #6b8d9e 1px, #6b8d9e 1px, #6b8d9e 20px);"">
		&nbsp;
	</div>

	<div style=""border-radius: 5px; margin-top: 5px; margin-bottom: 5px; padding: 15px; border: solid 1px #cea001; background-color: #ffe100;"">
		<table cellpadding=""3"" cellspacing=""0"">
			<tbody>
				<tr>
					<td");
            BeginWriteAttribute("style", " style=\"", 591, "\"", 599, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						<b>Unit Converter</b>
					</td>

				</tr>
			</tbody>
		</table>
	</div>


	<div id=""iContent"">

		<div class=""tab-buttons"">
			<ul>
				<li id=""tab-button1"" class=""tab-buttons-li"" style=""background-color: rgb(240, 240, 240); border-color: rgb(192, 192, 192); font-weight: normal;"">
					<a id=""tab-button-a1""
					   onclick=""showPage1()"" style=""cursor:pointer;color: rgb(0, 113, 158);"">
						Length Converter
					</a>
				</li>
				<li id=""tab-button2"" class=""tab-buttons-li"" style=""background-color: rgb(240, 240, 240); border-color: rgb(192, 192, 192); font-weight: normal;"">
					<a id=""tab-buttona2"" onclick=""showPage2()"" style=""cursor:pointer;color: rgb(110, 110, 255);"">
						Temperature Converter
					</a>

				</li>
				<li id=""tab-button3"" class=""tab-buttons-li""  style=""background-color: rgb(208, 208, 208); border-color: rgb(128, 128, 128); font-weight: bold;"">
					<a id=""tab-button-a3"" onclick=""showPage3()"" style=""cursor:pointer;color: rgb(110, 110, 255);"">
						W");
            WriteLiteral(@"eight Converter
					</a>
				</li>
				<li id=""tab-button3"" class=""tab-buttons-li"" style=""background-color: rgb(240, 240, 240); border-color: rgb(192, 192, 192); font-weight: normal;"">
					<a id=""tab-button-a3"" onclick=""showPage4()"" style=""cursor:pointer;color: rgb(110, 110, 255);"">
						Speed Converter
					</a>
				</li>



			</ul>

			<div style=""clear:both;""></div>
		</div>

		<div id=""tab1"" class=""tab-item"" style=""display: block;"">

			<h1 id=""iH1"">
				Temperature Converter
			</h1>

			<table cellpadding=""3"" cellspacing=""0"">
				<tbody>
					<tr>
						<td>
							Pounds
						</td>
						<td>
							<input type=""number"" id=""inputPounds"" oninput=""weightConverter(this.id,this.value)"" onchange=""weightConverter(this.id,this.value)"" style=""direction: ltr; text-align: left;"">
						</td>
					</tr>
					<tr>
						<td>
							Kilograms
						</td>
						<td>
							<input type=""number"" id=""inputKilograms"" oninput=""weightConverter(this.id,this.value)"" onchange=""weight");
            WriteLiteral(@"Converter(this.id,this.value)"" style=""direction: ltr; text-align: left;"">
						</td>
					</tr>
					<tr>
						<td>
							Ounces
						</td>
						<td>
							<input type=""number"" id=""inputOunces"" oninput=""weightConverter(this.id,this.value)"" onchange=""weightConverter(this.id,this.value)"" style=""direction: ltr; text-align: left;"">
						</td>
					</tr>

					<tr>
						<td>
							Grams
						</td>
						<td>
							<input type=""number"" id=""inputGrams"" oninput=""weightConverter(this.id,this.value)"" onchange=""weightConverter(this.id,this.value)"" style=""direction: ltr; text-align: left;"">
						</td>
					</tr>
					<tr>
						<td>
							Stones
						</td>
						<td>
							<input type=""number"" id=""inputStones"" oninput=""weightConverter(this.id,this.value)"" onchange=""weightConverter(this.id,this.value)"" style=""direction: ltr; text-align: left;"">
						</td>
					</tr>

				</tbody>
			</table>
		</div>
	</div>
</div>

<script src=""/js/jquery.min.js""></script>


<script>");
            WriteLiteral(@"

	function showPage1() {
		$(""#Tabs"").load(""/Settings/LengthConverter/"");
	}

	function showPage2() {
		$(""#Tabs"").load(""/Settings/TemperatureConverter/"");
	}

	function showPage3() {
		$(""#Tabs"").load(""/Settings/WeightConverter/"");
	}

	function showPage4() {
		$(""#Tabs"").load(""/Settings/SpeedConverter/"");
	}

	function weightConverter(source, valNum) {
		valNum = parseFloat(valNum);
		var inputPounds = document.getElementById(""inputPounds"");
		var inputKilograms = document.getElementById(""inputKilograms"");
		var inputOunces = document.getElementById(""inputOunces"");
		var inputGrams = document.getElementById(""inputGrams"");
		var inputStones = document.getElementById(""inputStones"");
		if (source == ""inputPounds"") {
			inputKilograms.value = (valNum / 2.2046).toFixed(2);
			inputOunces.value = (valNum * 16).toFixed(2);
			inputGrams.value = (valNum / 0.0022046).toFixed();
			inputStones.value = (valNum * 0.071429).toFixed(3);
		}
		if (source == ""inputKilograms"") {
			inputPound");
            WriteLiteral(@"s.value = (valNum * 2.2046).toFixed(2);
			inputOunces.value = (valNum * 35.274).toFixed(2);
			inputGrams.value = (valNum * 1000).toFixed();
			inputStones.value = (valNum * 0.1574).toFixed(3);
		}
		if (source == ""inputOunces"") {
			inputPounds.value = (valNum * 0.062500).toFixed(4);
			inputKilograms.value = (valNum / 35.274).toFixed(4);
			inputGrams.value = (valNum / 0.035274).toFixed(1);
			inputStones.value = (valNum * 0.0044643).toFixed(4);
		}
		if (source == ""inputGrams"") {
			inputPounds.value = (valNum * 0.0022046).toFixed(4);
			inputKilograms.value = (valNum / 1000).toFixed(4);
			inputOunces.value = (valNum * 0.035274).toFixed(3);
			inputStones.value = (valNum * 0.00015747).toFixed(5);
		}
		if (source == ""inputStones"") {
			inputPounds.value = (valNum * 14).toFixed(1);
			inputKilograms.value = (valNum / 0.15747).toFixed(1);
			inputOunces.value = (valNum * 224).toFixed();
			inputGrams.value = (valNum / 0.00015747).toFixed();
		}

	}
</script>

");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
