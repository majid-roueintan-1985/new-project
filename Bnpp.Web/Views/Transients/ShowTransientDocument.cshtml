@model IEnumerable< Bnpp.DataLayer.Entities.TransientDocuments>

@{
    ViewData["Title"] = "ShowTransientDocument";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@* <link href="/css/bootstrap.css" rel="stylesheet" /> *@
<style>
    /* img {
                            display: block;
                            width: 100%;
                            height: auto;
                        }*/

    p {
        background: none;
        color: #ffffff;
    }

    #slideShow #slideShowWindow {
        width: 650px;
        height: 450px;
        margin: 0;
        padding: 0;
        position: relative;
        overflow: hidden;
        margin-left: auto;
        margin-right: auto;
    }

        #slideShow #slideShowWindow .slide {
            margin: 0;
            padding: 0;
            width: 650px;
            height: 450px;
            float: left;
            position: relative;
            margin-left: auto;
            margin-right: auto;
        }

        #slideshow #slideshowWindow .slide, .slideText {
            position: absolute;
            bottom: 18px;
            left: 27%;
            width: 100%;
            height: auto;
            margin: 0;
            padding: 0;
            color: black;
            font-family: Myriad Pro, Arial, Helvetica, sans-serif;
        }

    .slideText {
        background: white;
    }

    #slideshow #slideshowWindow .slide .slideText h2,
    #slideshow #slideshowWindow .slide .slideText p {
        margin: 10px;
        padding: 15px;
    }

    .slideNav {
        display: block;
        text-indent: -10000px;
        position: absolute;
        cursor: pointer;
    }

    #leftNav {
        left: 0;
        bottom: 10px;
        width: 48px;
        height: 48px;
        background-image: url("/images/indent_fa.png");
        background-repeat: no-repeat;
        z-index: 10;
    }

    #rightNav {
        right: 0;
        bottom: 0;
        width: 48px;
        height: 48px;
        background-image: url("/images/indent.png");
        background-repeat: no-repeat;
        z-index: 10;
    }
</style>

<div id="editDocument">
    <div id="slideShow">
        <div id="slideShowWindow">
            @foreach (var item in Model)
            {


                var extn = item.Filename.Split(".").Last();

                @if (extn == "png" || extn == "jpeg" || extn == "jpg")
                {
                    <div class="slide">
                        <img src="/transientFiles/@item.TransientDocumentsImage" width="100%" />
                        <div class="slideText">
                           @*  <h2>@item.Filename</h2> *@

                        </div><!--</slideText> -->
                    </div>
                }
                else
                {
                    <p>
                        <a href="/transientFiles/@item.TransientDocumentsImage">@item.Filename</a>
                    </p>
                }
            }
            <!-- </slide> repeat as many times as needed -->
        </div><!--</slideShowWindow> -->
    </div><!--</slideshow> -->
    <div>
        <input type="button" onclick="EditDocuments()" class="btn-edit-equip" value="Edit Documents">
    </div>
</div>


<script src="/js/jquery.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script>
    $(document).ready(function () {

        var currentPosition = 0;
        var slideWidth = 650;
        var slides = $('.slide');
        var numberOfSlides = slides.length;
        var slideShowInterval;
        var speed = 5000;

        //Assign a timer, so it will run periodically
        slideShowInterval = setInterval(changePosition, speed);

        slides.wrapAll('<div id="slidesHolder"></div>');

        slides.css({ 'float': 'left' });

        //set #slidesHolder width equal to the total width of all the slides
        $('#slidesHolder').css('width', slideWidth * numberOfSlides);

        $('#slideShowWindow')
            .prepend('<span class="slideNav" id="leftNav">Move Left</span>')
            .append('<span class="slideNav" id="rightNav">Move Right</span>');

        manageNav(currentPosition);

        //tell the buttons what to do when clicked
        $('.slideNav').bind('click', function () {

            //determine new position
            currentPosition = ($(this).attr('id') === 'rightNav')
                ? currentPosition + 1 : currentPosition - 1;

            //hide/show controls
            manageNav(currentPosition);
            clearInterval(slideShowInterval);
            slideShowInterval = setInterval(changePosition, speed);
            moveSlide();
        });

        function manageNav(position) {
            //hide left arrow if position is first slide
            if (position === 0) {
                $('#leftNav').hide();
            }
            else {
                $('#leftNav').show();
            }
            //hide right arrow is slide position is last slide
            if (position === numberOfSlides - 1) {
                $('#rightNav').hide();
            }
            else {
                $('#rightNav').show();
            }
        }


        //changePosition: this is called when the slide is moved by the timer and NOT when the next or previous buttons are clicked
        function changePosition() {
            if (currentPosition === numberOfSlides - 1) {
                currentPosition = 0;
                manageNav(currentPosition);
            } else {

                currentPosition++;
                manageNav(currentPosition);
            }
            moveSlide();
        }


        //moveSlide: this function moves the slide
        function moveSlide() {
            $('#slidesHolder').animate({ 'marginLeft': slideWidth * (-currentPosition) });
        }

    });

    

    function EditDocuments(){
        $("#editDocument").load("/Transients/EditDocument/"+@ViewBag.TransientId);
    }
</script>