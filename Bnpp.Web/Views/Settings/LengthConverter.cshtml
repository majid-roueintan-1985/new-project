@{
	ViewData["Title"] = "LengthConverter";
	Layout = null;
}




<div class="dcontent">
	<div style="margin-top: 10px; background-color: #6b8d9e; padding-top: 5px; padding-bottom: 5px; padding-right: 10px; border-radius: 5px; border: solid 1px #cccccc; background: repeating-linear-gradient(-45deg, #7fa1b3, #6b8d9e 1px, #6b8d9e 1px, #6b8d9e 20px);">
		&nbsp;
	</div>

	<div style="border-radius: 5px; margin-top: 5px; margin-bottom: 5px; padding: 15px; border: solid 1px #cea001; background-color: #ffe100;">
		<table cellpadding="3" cellspacing="0">
			<tbody>
				<tr>
					<td style="">
						<b>Unit Converter</b>
					</td>

				</tr>
			</tbody>
		</table>
	</div>


	<div id="iContent">

		<div class="tab-buttons">
			<ul>
				<li id="tab-button1" class="tab-buttons-li" @*style="background-color: rgb(240, 240, 240); border-color: rgb(192, 192, 192); font-weight: normal;"*@ style="background-color: rgb(208, 208, 208); border-color: rgb(128, 128, 128); font-weight: bold;">
					<a id="tab-button-a1"
					   onclick="showPage1()" style="cursor:pointer;color: rgb(0, 113, 158);">
						Length Converter
					</a>
				</li>
				<li id="tab-button2" @*class="tab-buttons-li"*@ style="background-color: rgb(240, 240, 240); border-color: rgb(192, 192, 192); font-weight: normal;">
					<a id="tab-buttona2" onclick="showPage2()" style="cursor:pointer;color: rgb(110, 110, 255);">
						Temperature Converter
					</a>

				</li>
				<li id="tab-button3" class="tab-buttons-li" style="background-color: rgb(240, 240, 240); border-color: rgb(192, 192, 192); font-weight: normal;">
					<a id="tab-button-a3" onclick="showPage3()" style="cursor:pointer;color: rgb(110, 110, 255);">
						Weight Converter
					</a>
				</li>
				<li id="tab-button3" class="tab-buttons-li" style="background-color: rgb(240, 240, 240); border-color: rgb(192, 192, 192); font-weight: normal;">
					<a id="tab-button-a3" onclick="showPage4()" style="cursor:pointer;color: rgb(110, 110, 255);">
						Speed Converter
					</a>
				</li>



			</ul>

			<div style="clear:both;"></div>
		</div>

		<div id="tab1" class="tab-item" style="display: block;">

			<h1 id="iH1">
				Length Converter
			</h1>

			<table cellpadding="3" cellspacing="0">
				<tbody>
					<tr>
						<td>
							Meters
						</td>
						<td>
							<input type="number" id="inputMeters" oninput="lengthConverter(this.id,this.value)" onchange="lengthConverter(this.id,this.value)" style="direction: ltr; text-align: left;">
						</td>
					</tr>
					<tr>
						<td>
							Feet
						</td>
						<td>
							<input type="number" id="inputFeet" oninput="lengthConverter(this.id,this.value)" onchange="lengthConverter(this.id,this.value)" style="direction: ltr; text-align: left;">
						</td>
					</tr>
					<tr>
						<td>
							Inches
						</td>
						<td>
							<input type="number" id="inputInches" oninput="lengthConverter(this.id,this.value)" onchange="lengthConverter(this.id,this.value)" style="direction: ltr; text-align: left;">
						</td>
					</tr>
					<tr>
						<td>
							cm
						</td>
						<td>
							<input type="number" id="inputcm" oninput="lengthConverter(this.id,this.value)" onchange="lengthConverter(this.id,this.value)" style="direction: ltr; text-align: left;">
						</td>
					</tr>
					<tr>
						<td>
							Yards
						</td>
						<td>
							<input type="number" id="inputYards" oninput="lengthConverter(this.id,this.value)" onchange="lengthConverter(this.id,this.value)" style="direction: ltr; text-align: left;">
						</td>
					</tr>
					<tr>
						<td>
							Kilometers
						</td>
						<td>
							<input type="number" id="inputKilometers" oninput="lengthConverter(this.id,this.value)" onchange="lengthConverter(this.id,this.value)" style="direction: ltr; text-align: left;">
						</td>
					</tr>
					<tr>
						<td>
							Miles
						</td>
						<td>
							<input type="number" id="inputMiles" oninput="lengthConverter(this.id,this.value)" onchange="lengthConverter(this.id,this.value)" style="direction: ltr; text-align: left;">
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
</div>

<script src="/js/jquery.min.js"></script>



<script>

	function showPage1() {
		$("#Tabs").load("/Settings/LengthConverter/");
	}

	function showPage2() {
		$("#Tabs").load("/Settings/TemperatureConverter/");
	}


	function showPage3() {
		$("#Tabs").load("/Settings/WeightConverter/");
	} 

	function showPage4() {
		$("#Tabs").load("/Settings/SpeedConverter/");
	}

	// function showPage5() {
	// 	$("#Tabs").load("/Maintenance/Measurements/@ViewBag.MechanicalId");
	// }

	// function showPage6() {
	// 	$("#Tabs").load("/Maintenance/DefectsReport/@ViewBag.MechanicalId");
	// }


	function lengthConverter(source, valNum) {
		valNum = parseFloat(valNum);
		var inputFeet = document.getElementById("inputFeet");
		var inputMeters = document.getElementById("inputMeters");
		var inputInches = document.getElementById("inputInches");
		var inputcm = document.getElementById("inputcm");
		var inputYards = document.getElementById("inputYards");
		var inputKilometers = document.getElementById("inputKilometers");
		var inputMiles = document.getElementById("inputMiles");
		if (source == "inputFeet") {
			inputMeters.value = (valNum / 3.2808).toFixed(2);
			inputInches.value = (valNum * 12).toFixed(2);
			inputcm.value = (valNum / 0.032808).toFixed();
			inputYards.value = (valNum * 0.33333).toFixed(2);
			inputKilometers.value = (valNum / 3280.8).toFixed(5);
			inputMiles.value = (valNum * 0.00018939).toFixed(5);
		}
		if (source == "inputMeters") {
			inputFeet.value = (valNum * 3.2808).toFixed(2);
			inputInches.value = (valNum * 39.370).toFixed(2);
			inputcm.value = (valNum / 0.01).toFixed();
			inputYards.value = (valNum * 1.0936).toFixed(2);
			inputKilometers.value = (valNum / 1000).toFixed(5);
			inputMiles.value = (valNum * 0.00062137).toFixed(5);
		}
		if (source == "inputInches") {
			inputFeet.value = (valNum * 0.083333).toFixed(3);
			inputMeters.value = (valNum / 39.370).toFixed(3);
			inputcm.value = (valNum / 0.39370).toFixed(2);
			inputYards.value = (valNum * 0.027778).toFixed(3);
			inputKilometers.value = (valNum / 39370).toFixed(6);
			inputMiles.value = (valNum * 0.000015783).toFixed(6);
		}
		if (source == "inputcm") {
			inputFeet.value = (valNum * 0.032808).toFixed(3);
			inputMeters.value = (valNum / 100).toFixed(3);
			inputInches.value = (valNum * 0.39370).toFixed(2);
			inputYards.value = (valNum * 0.010936).toFixed(3);
			inputKilometers.value = (valNum / 100000).toFixed(6);
			inputMiles.value = (valNum * 0.0000062137).toFixed(6);
		}
		if (source == "inputYards") {
			inputFeet.value = (valNum * 3).toFixed();
			inputMeters.value = (valNum / 1.0936).toFixed(2);
			inputInches.value = (valNum * 36).toFixed();
			inputcm.value = (valNum / 0.010936).toFixed();
			inputKilometers.value = (valNum / 1093.6).toFixed(5);
			inputMiles.value = (valNum * 0.00056818).toFixed(5);
		}
		if (source == "inputKilometers") {
			inputFeet.value = (valNum * 3280.8).toFixed();
			inputMeters.value = (valNum * 1000).toFixed();
			inputInches.value = (valNum * 39370).toFixed();
			inputcm.value = (valNum * 100000).toFixed();
			inputYards.value = (valNum * 1093.6).toFixed();
			inputMiles.value = (valNum * 0.62137).toFixed(2);
		}
		if (source == "inputMiles") {
			inputFeet.value = (valNum * 5280).toFixed();
			inputMeters.value = (valNum / 0.00062137).toFixed();
			inputInches.value = (valNum * 63360).toFixed();
			inputcm.value = (valNum / 0.0000062137).toFixed();
			inputYards.value = (valNum * 1760).toFixed();
			inputKilometers.value = (valNum / 0.62137).toFixed(2);
		}
	}

</script>

